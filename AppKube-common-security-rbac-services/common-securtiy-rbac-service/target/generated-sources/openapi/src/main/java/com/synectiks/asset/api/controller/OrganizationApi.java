/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.synectiks.asset.api.controller;

import com.synectiks.asset.api.model.Organization;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-05-21T08:33:53.267382700-07:00[America/Los_Angeles]")
@Validated
@Api(value = "organization", description = "the organization API")
public interface OrganizationApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /organization/add : Add a new organization
     *
     * @param pushToCmdb  (required)
     * @param organization  (required)
     * @return Successful operation (status code 200)
     *         or Expectation failed (status code 417)
     */
    @ApiOperation(value = "Add a new organization", nickname = "organizationAddPost", notes = "", response = Organization.class, tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class),
        @ApiResponse(code = 417, message = "Expectation failed") })
    @PostMapping(
        value = "/organization/add",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Organization> organizationAddPost(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "pushToCmdb", required = true) Boolean pushToCmdb,@ApiParam(value = "" ,required=true )  @Valid @RequestBody Organization organization) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /organization/getAllOrganizations : Retrieve all organizations
     *
     * @return Successful operation (status code 200)
     *         or Organizations not found (status code 404)
     */
    @ApiOperation(value = "Retrieve all organizations", nickname = "organizationGetAllOrganizationsGet", notes = "", response = Organization.class, responseContainer = "List", tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Organizations not found") })
    @GetMapping(
        value = "/organization/getAllOrganizations",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Organization>> organizationGetAllOrganizationsGet() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /organization/getOrganizationByUserName : Retrieve organization by user name
     *
     * @param userName  (required)
     * @return Successful operation (status code 200)
     *         or Organization not found (status code 404)
     */
    @ApiOperation(value = "Retrieve organization by user name", nickname = "organizationGetOrganizationByUserNameGet", notes = "", response = Organization.class, tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class),
        @ApiResponse(code = 404, message = "Organization not found") })
    @GetMapping(
        value = "/organization/getOrganizationByUserName",
        produces = { "application/json" }
    )
    default ResponseEntity<Organization> organizationGetOrganizationByUserNameGet(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "userName", required = true) String userName) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /organization/id/{id} : Retrieve organization by ID
     *
     * @param id  (required)
     * @return Successful operation (status code 200)
     *         or Organization not found (status code 404)
     */
    @ApiOperation(value = "Retrieve organization by ID", nickname = "organizationIdIdGet", notes = "", response = Organization.class, tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class),
        @ApiResponse(code = 404, message = "Organization not found") })
    @GetMapping(
        value = "/organization/id/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<Organization> organizationIdIdGet(@ApiParam(value = "",required=true) @PathVariable("id") Long id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /organization/name/{organizationName} : Retrieve organization by name
     *
     * @param organizationName  (required)
     * @return Successful operation (status code 200)
     *         or Organization not found (status code 404)
     */
    @ApiOperation(value = "Retrieve organization by name", nickname = "organizationNameOrganizationNameGet", notes = "", response = Organization.class, tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class),
        @ApiResponse(code = 404, message = "Organization not found") })
    @GetMapping(
        value = "/organization/name/{organizationName}",
        produces = { "application/json" }
    )
    default ResponseEntity<Organization> organizationNameOrganizationNameGet(@ApiParam(value = "",required=true) @PathVariable("organizationName") String organizationName) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /organization/profile-by-id/{id} : Retrieve organization profile by ID
     *
     * @param id  (required)
     * @return Successful operation (status code 200)
     *         or Organization not found (status code 404)
     *         or Expectation failed (status code 417)
     */
    @ApiOperation(value = "Retrieve organization profile by ID", nickname = "organizationProfileByIdIdGet", notes = "", response = Organization.class, tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class),
        @ApiResponse(code = 404, message = "Organization not found"),
        @ApiResponse(code = 417, message = "Expectation failed") })
    @GetMapping(
        value = "/organization/profile-by-id/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<Organization> organizationProfileByIdIdGet(@ApiParam(value = "",required=true) @PathVariable("id") Long id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /organization/profile-by-name/{name} : Retrieve organization profile by name
     *
     * @param name  (required)
     * @return Successful operation (status code 200)
     *         or Organization not found (status code 404)
     *         or Expectation failed (status code 417)
     */
    @ApiOperation(value = "Retrieve organization profile by name", nickname = "organizationProfileByNameNameGet", notes = "", response = Organization.class, tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class),
        @ApiResponse(code = 404, message = "Organization not found"),
        @ApiResponse(code = 417, message = "Expectation failed") })
    @GetMapping(
        value = "/organization/profile-by-name/{name}",
        produces = { "application/json" }
    )
    default ResponseEntity<Organization> organizationProfileByNameNameGet(@ApiParam(value = "",required=true) @PathVariable("name") String name) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /organization/push-to-cmdb/{organizationName} : Push organization to CMDB
     *
     * @param organizationName  (required)
     * @return Successful operation (status code 200)
     *         or Organization not found (status code 404)
     */
    @ApiOperation(value = "Push organization to CMDB", nickname = "organizationPushToCmdbOrganizationNamePost", notes = "", response = Organization.class, tags={ "Organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Organization.class),
        @ApiResponse(code = 404, message = "Organization not found") })
    @PostMapping(
        value = "/organization/push-to-cmdb/{organizationName}",
        produces = { "application/json" }
    )
    default ResponseEntity<Organization> organizationPushToCmdbOrganizationNamePost(@ApiParam(value = "",required=true) @PathVariable("organizationName") String organizationName) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"fileName\" : \"fileName\", \"address\" : \"address\", \"description\" : \"description\", \"profileImage\" : \"profileImage\", \"phone\" : \"phone\", \"name\" : \"name\", \"dateOfEstablishment\" : \"2000-01-23T04:56:07.000+00:00\", \"cmdbOrgId\" : 6, \"fileStorageLocationType\" : \"fileStorageLocationType\", \"id\" : 0, \"fax\" : \"fax\", \"email\" : \"email\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
